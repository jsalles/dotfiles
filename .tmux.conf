# Zero-based indexing is fine in programming languages, but not so much in a multiplexer
# when zero is on the other side of the keyboard.
set -g base-index 1
setw -g pane-base-index 1

# renumber windows when a window is closed
set -g renumber-windows on

# switch to another session when exiting last terminal of a session
set-option -g detach-on-destroy off

# Misc
# set -g default-terminal "tmux"
set -g default-terminal "xterm-kitty"
# set -g default-terminal "screen-256color"
# set -g default-terminal "screen-256color-italic"
set -ga terminal-overrides ",xterm-256color:Tc"
set-window-option -g xterm-keys on

# Set window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity on

## COLORSCHEME: gruvbox dark
set-option -g status "on"
set-option -g status-position top

# default statusbar colors
set-option -g status-style bg=colour237,fg=colour223 #bg1

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 #yellow

set-window-option -g window-status-activity-style bg=colour237,fg=colour248 #bg1, fg3

# active window title colors
set-window-option -g window-status-current-style bg=default,fg=colour237

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 #bg2

# writting commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 #fg3

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-style "none"
set-option -g status-justify "left"
set-option -g status-left-style "none"
set-option -g status-left-length "80"
set-option -g status-right-style "none"
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=colour214, bg=colour237]#{?client_prefix,  ,}#[fg=colour175]#{?window_zoomed_flag,  ,}#[fg=colour237, bg=colour241]#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]"
# set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[fg=colour246,bg=colour239]  #S.*.dsdev  %H:%M #[fg=colour248, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour237, bg=colour248]  #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD) "
set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[fg=colour246,bg=colour239]#(echo '#{pane_current_path}' | rg --color=never -o 'Sites/([^/]+)' -r '  $1.*.dsdev ')#[fg=colour248, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour237, bg=colour248]#(cd #{pane_current_path}; git rev-parse && echo \"  $(git rev-parse --abbrev-ref HEAD)\") "

set-window-option -g window-status-current-format "#[fg=colour239, bg=colour248, :nobold, noitalics, nounderscore]#[fg=colour239, bg=colour214] #I #[fg=colour239, bg=colour214, bold] #W #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
set-window-option -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223,bg=colour239] #I #[fg=colour223, bg=colour239] #W #[fg=colour239, bg=colour237, noitalics]"

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

#********************************************************************* 
#* Bindings
#********************************************************************/ 

# Prefix from 'C-b' to 'C-q'
    unbind C-b
    set-option -g prefix C-q
    bind-key C-q send-prefix

# Reload TMUX
    bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf" 

# Allows us to use C-b b <command> to send commands to a TMUX session inside
# another TMUX session
bind-key C-b send-prefix

# vim like bindings
setw -g mode-keys vi
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xsel -b"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# use different keys to split vertical and horizonal
bind '"' split-window -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# auto window rename
set-window-option -g automatic-rename

# mouse
set -g mouse on

# set scrollback to x lines
set -g history-limit 50000

# Allow focus hooks for kakoune
set-option -g focus-events on

# bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'jeffnguyen695/tmux-zoxide-session'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_vim="~/dotfiles/is_vim.sh '#{pane_tty}'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

set -g default-command /usr/local/bin/fish
set -g default-shell /usr/local/bin/fish

setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
